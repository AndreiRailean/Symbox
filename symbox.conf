<VirtualHost *:80>
    ServerName symbox.local
    ServerAlias *symbox.local

	##
	## NOTE: if you use this setup, you'll need to put the following into .htaccess
	## RewriteBase /
	##

	# file structure:
	# /www/symbox/
	#   .public
	#	EXAMPLE/ (symfony dir)
	#   ANOTHER_EXAMPLE/ (symfony dir)
	
	# this will make EXAMPLE.symbox.local
	# and ANOTHER_EXAMPLE.symbox.local
	# available via apache

	# You need a .public directory for default document root so apache doesn't bark
	# it is used if there is no default subdomain
	DocumentRoot /www/symbox/.public

    <Directory "/www/symbox">
    	Options FollowSymlinks MultiViews
        AllowOverride All
    </Directory>

	RewriteEngine on

	# FIRST is the default - no subdomain
	RewriteCond		%{HTTP_HOST}			^(symbox.+)$
	RewriteRule		^(.*)					/www/symbox/.public$1	[E=SYMBOX_CODE:www,E=SYMBOX_BASE:%1]

	# SECOND: Deal with subdomains. i.e.: EXAMPLE.symbox.local
	# Note that sub-subdomains all point to a subdomain i.e: TEST.EXAMPLE.symbox.local goes to EXAMPLE symbox
	RewriteCond		%{HTTP_HOST}			^((.+\.)?([^.]+))\.(symbox.+)$
	RewriteCond		/www/symbox/%3/web		-d

	# Assign symbox code to a server var so it can be used inside PHP code (if needed) and in rules below
	RewriteRule		.						-	[C,E=SYMBOX_CODE:%3,E=SYMBOX_BASE:%4]
	
	# Alias for /sf urls goes deep into symfony source to avoid copying stuff around
	RewriteRule		^/sf(.*)				/www/symbox/%{ENV:SYMBOX_CODE}/lib/vendor/symfony/data/web/sf$1 [L]

	# Everything else goes to the web dir
	RewriteRule		^(.*) 					/www/symbox/%{ENV:SYMBOX_CODE}/web$1	[L]	

	# THIRD: if symbox does not exist, we go to content in .public and throw 404
	RewriteCond		%{HTTP_HOST}			^((.+\.)?([^.]+))\.(symbox.+)$
	RewriteCond		/www/symbox/%3/web		!-d
	RewriteRule		.						-	[C,E=SYMBOX_BASE:%4]
	RewriteRule		.						http://%{SYMBOX_BASE}	[R=404,L]
	
</VirtualHost>